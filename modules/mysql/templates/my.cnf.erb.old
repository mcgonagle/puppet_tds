##############################################################################
# This file is mananged by puppet.  Do NOT edit on the server, your changes  #
# will be blown away on the next puppet run.                                 #
##############################################################################
# Example MySQL config file for very large systems.
#
# This is for a large system with memory of 1G-2G where the system runs mainly
# MySQL.
#
# You can copy this file to
# /etc/my.cnf to set global options,
# mysql-data-dir/my.cnf to set server-specific options (in this
# installation this directory is /var/lib/mysql) or
# ~/.my.cnf to set user-specific options.
#
# In this file, you can use all long options that a program supports.
# If you want to know which options a program supports, run the program
# with the "--help" option.

# The following options will be passed to all MySQL clients
[client]
#password       = your_password
port            = 3306
socket          = /var/lib/mysql/mysql.sock

# Here follows entries for some specific programs

# The MySQL server
[mysqld]
port            = 3306
socket          = /var/lib/mysql/mysql.sock
skip-locking
#skip-bdb
old_passwords=1
thread_cache = 16
thread_cache_size = 4
table_cache = 256
join_buffer_size = 256K
key_buffer_size = 1GB
query_cache_size = 256M
query_cache_limit = 100M
sort_buffer_size = 10M
read_rnd_buffer_size = 256K
# Try number of CPU's*2 for thread_concurrency
thread_concurrency = <%= scope.lookupvar("mysql::params::thread_concurrency") %>  

datadir = /var/lib/mysql

# Don't listen on a TCP/IP port at all. This can be a security enhancement,
# if all processes that need to connect to mysqld run on the same host.
# All interaction with mysqld must be made via Unix sockets or named pipes.
# Note that using this option without enabling named pipes on Windows
# (via the "enable-named-pipe" option) will render mysqld useless!
# 
#skip-networking

# required unique id between 1 and 2^32 - 1
# defaults to 1 if master-host is not set
# but will not function as a master if omitted
# server-id     = 1

# Replication Slave (comment out master section to use this)
#
# To configure this host as a replication slave, you can choose between
# two methods :
#
# 1) Use the CHANGE MASTER TO command (fully described in our manual) -
#    the syntax is:
#
#    CHANGE MASTER TO MASTER_HOST=<host>, MASTER_PORT=<port>,
#    MASTER_USER=<user>, MASTER_PASSWORD=<password> ;
#
#    where you replace <host>, <user>, <password> by quoted strings and
#    <port> by the master's port number (3306 by default).
#
#    Example:
#
#    CHANGE MASTER TO MASTER_HOST='125.564.12.1', MASTER_PORT=3306,
#    MASTER_USER='joe', MASTER_PASSWORD='secret';
#
# OR
#
# 2) Set the variables below. However, in case you choose this method, then
#    start replication for the first time (even unsuccessfully, for example
#    if you mistyped the password in master-password and the slave fails to
#    connect), the slave will create a master.info file, and any later
#    change in this file to the variables' values below will be ignored and
#    overridden by the content of the master.info file, unless you shutdown
#    the slave server, delete master.info and restart the slaver server.
#    For that reason, you may want to leave the lines below untouched
#    (commented) and instead use CHANGE MASTER TO (see above)
#
# required unique id between 2 and 2^32 - 1
# (and different from the master)
# defaults to 2 if master-host is set
# but will not function as a slave if omitted
server-id       = 2

#
# The replication master for this slave - required
#master-host     =   <hostname>
#
# The username the slave will use for authentication when connecting
# to the master - required
#master-user     =   <username>
#
# The password the slave will authenticate with when connecting to
# the master - required
#master-password =   <password>
#
# The port the master is listening on.
# optional - defaults to 3306
#master-port     =  <port>
#
# binary logging - not required for slaves, but recommended
log-bin = /var/log/mysql/bin.log
log-bin-index = /var/log/mysql/log-bin.index
#log-slave-updates
 

# Point the following paths to different dedicated disks
tmpdir          = /tmp/
#log-update     = /path-to-dedicated-directory/hostname

default-storage-engine = innodb
# Uncomment the following if you are using InnoDB tables
innodb_data_home_dir = /var/lib/mysql/
innodb_data_file_path = ibdata1:10M:autoextend
innodb_log_group_home_dir = /var/lib/mysql/
#innodb_log_arch_dir = /var/lib/mysql/
innodb_file_per_table = 1
# You can set .._buffer_pool_size up to 50 - 80 %
# of RAM but beware of setting memory usage too high
innodb_buffer_pool_size = <%= memorysize.to_i*0.75.round %> GB
innodb_additional_mem_pool_size = 20M
# Set .._log_file_size to 25 % of buffer pool size
# This is being increased to 50% to allow for us to grow the buffer pool cleanly
innodb_log_file_size = 1000M
innodb_log_files_in_group = 2
innodb_log_buffer_size = 8M
##innodb_flush_log_at_trx_commit = 1
innodb_flush_log_at_trx_commit = 2
innodb_lock_wait_timeout = 86400
innodb_flush_method = O_DIRECT

# Carried over from tod
#tmp_table_size = 50M
tmp_table_size = 100M
max_heap_table_size = 100M
max_connections = 500
skip-locking

long_query_time=5
#log-slow-queries = /var/log/mysql/slow_query.log
#log-long-format
#log-queries-not-using-indexes
log-error = /var/log/mysql/error.log
#log=/var/log/mysql/sql.log

skip-slave-start

[mysqldump]
quick
max_allowed_packet = 16M

[mysql]
no-auto-rehash
# Remove the next comment character if you are not familiar with SQL
#safe-updates

[isamchk]
key_buffer = 256M
sort_buffer_size = 256M
read_buffer = 2M
write_buffer = 2M

[myisamchk]
#key_buffer = 256M
key_buffer = 2G
sort_buffer_size = 256M
read_buffer = 2M
write_buffer = 2M

[mysqlhotcopy]
interactive-timeout

[mysqld_safe]
err-log=/var/log/mysql/error.log
pid-file=/var/run/mysqld/mysqld.pid
